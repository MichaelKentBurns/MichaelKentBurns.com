					<item>
		<title><![CDATA[How to use GitHub to source control a WordPress site]]></title>
		<link>https://michaelkentburns.com/index.php/how-to/how-to-administer-a-wordpress-site/how-to-use-github-to-source-control-a-wordpress-site/</link>
		<pubDate>Fri, 08 Mar 2024 23:58:56 +0000</pubDate>
		<dc:creator><![CDATA[michaelkentburns@gmail.com]]></dc:creator>
		<guid isPermaLink="false">https://michaelkentburns.com/?page_id=266</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>As mentioned in the <a href="https://michaelkentburns.com/index.php/work-globally/" data-type="page" data-id="59">Work globally page</a>, GitHub is an excellent way to keep a repository of a software project.  A WordPress site is no exception.   However, a WordPress site is significantly different than normal software projects in several regards:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>There is a lot of WordPress itself, as well as its Themes and Plugins that are contained in the public_html directory.   That is OK, and it's worthwhile tracking changes to those files.  For one, it is a good way to detect corruption in a site. </li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>The vast majority of the content of a WP site is in posts and pages.   When an author writes a blog post or a page of any sort, it does not create any new web pages in public_html.   This is a result of the fact that WP contains a powerful CMS (<a href="https://en.wikipedia.org/wiki/Content_management_system">ContentManagementSystem</a>).   A CMS manages the content in a database not a directory full of fully rendered HTML pages.   This is discussed more in the <a href="https://michaelkentburns.com/index.php/full-stack/" data-type="page" data-id="55">Full stack</a> page.   The actual content of a blog post or a page is stored as a separate record in the wp_posts table.  Blog posts have a post_type of 'post' and pages (like this one) have a post_type of 'page'.  There are in fact a number of other things that get stored in the wp_posts table.     As a result of these items stored as records in a table,  doing the GitHub tracking of the text of a file will not show changes in individual posts or pages.   </li>
<!-- /wp:list-item --></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Because the main visible content is stored in a database table it is necessary to extract the individual records of the wp_posts (and other tables) to textual form so the normal GitHub mechanisms can show it in a readable form.    As a first step to doing that, I have written a shells script called 'dumpall' that is kept in the public_html directory (for now).  That script is run in a shell process on the WP host site before a Git commit and push commands are run to update the GitHub repository.    This is step 1 in the GitHub issue #10 of the GitHub repository'.  Later, I will write a program to extract each record of the wp_posts table into a separate text file in a .data/posts directory.   It will require some nicer format than a simple SQL dump.  </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>266</wp:post_id>
		<wp:post_date><![CDATA[2024-03-08 23:58:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2024-03-08 23:58:56]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2024-03-09 00:00:27]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2024-03-09 00:00:27]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-use-github-to-source-control-a-wordpress-site]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>111</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[classic-editor-remember]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							</item>
